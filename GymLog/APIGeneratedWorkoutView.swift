import SwiftUI
import SwiftData

struct APIGeneratedWorkoutView: View {
    @Environment(\.modelContext) private var context
    @Environment(\.dismiss) private var dismiss

    @State private var selectedMuscle: String = "Legs"
    @State private var apiExercises: [Exercise] = []
    @State private var isLoading = false

    let muscles = [
        "Legs": 10,
        "Chest": 4,
        "Back": 12,
        "Shoulders": 2,
        "Arms": 1,
        "Abs": 6
    ]

    var body: some View {
        VStack(spacing: 16) {
            // Picker for muscle group
            Picker("Muscle Group", selection: $selectedMuscle) {
                ForEach(muscles.keys.sorted(), id: \.self) { name in
                    Text(name)
                }
            }
            .pickerStyle(.segmented)
            .padding()

            // Button to call the API
            Button("Generate Workout") {
                isLoading = true
                fetchExercises(for: muscles[selectedMuscle]!) { results in
                    self.apiExercises = results.filter { !$0.name.isEmpty }
                    self.isLoading = false
                }
            }
            .disabled(isLoading)
            .buttonStyle(.borderedProminent)

            // Show loading spinner
            if isLoading {
                ProgressView("Loading exercises...")
                    .padding()
            }

            // Show results
            if !apiExercises.isEmpty {
                List(apiExercises.prefix(5)) { exercise in
                    VStack(alignment: .leading, spacing: 4) {
                        Text(exercise.name)
                            .font(.headline)
                        if !exercise.description.isEmpty {
                            Text(exercise.description)
                                .font(.caption)
                                .foregroundColor(.gray)
                        }
                    }
                    .padding(.vertical, 4)
                }

                // Save the auto-generated workout
                Button("Save Workout") {
                    saveGeneratedWorkout()
                }
                .padding()
                .buttonStyle(.borderedProminent)
            }

            Spacer()
        }
        .navigationTitle("AI Workout")
        .padding()
    }

    func saveGeneratedWorkout() {
        let workout = Workout(name: "\(selectedMuscle) Day", bio: "Generated by Wger API")

        for apiEx in apiExercises.prefix(5) {
            let sets = [
                ExerciseSet(reps: 10, weight: 100),
                ExerciseSet(reps: 10, weight: 105),
                ExerciseSet(reps: 8, weight: 110)
            ]
            let ex = WorkoutExercise(name: apiEx.name, sets: sets)
            workout.exercises.append(ex)
        }

        context.insert(workout)
        dismiss()
    }
}
